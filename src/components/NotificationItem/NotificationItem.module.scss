@use "../../styles/variables" as *;
@use "../../styles/mixins" as *;

.notificationItem {
    background-color: $surface-primary;
    border: 1px solid $border-light;
    border-radius: $radius-lg;
    padding: $spacing-4;
    transition: all $transition-base;
    position: relative;

    &:hover {
        box-shadow: $shadow-md;
        transform: translateY(-1px);
    }

    &.unread {
        background-color: rgba($primary-50, 0.3);
        border-color: $primary-200;

        &::before {
            content: "";
            position: absolute;
            left: 0;
            top: 0;
            bottom: 0;
            width: 4px;
            background-color: $primary-500;
            border-radius: $radius-sm 0 0 $radius-sm;
        }
    }

    &.read {
        background-color: $surface-primary;
        border-color: $border-light;
    }

    &.loading {
        opacity: 0.7;
        pointer-events: none;
    }

    @include mobile-only {
        padding: $spacing-3;
        border-radius: $radius-md;
    }
}

.content {
    display: flex;
    align-items: flex-start;
    gap: $spacing-3;
    width: 100%;
}

.icon {
    position: relative;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;

    &.primary {
        background-color: rgba($primary-500, 0.1);
        border: 2px solid $primary-200;
    }

    &.error {
        background-color: rgba($error-500, 0.1);
        border: 2px solid $error-200;
    }

    &.success {
        background-color: rgba($success-500, 0.1);
        border: 2px solid $success-200;
    }

    &.warning {
        background-color: rgba($warning-500, 0.1);
        border: 2px solid $warning-200;
    }

    &.info {
        background-color: rgba($info-500, 0.1);
        border: 2px solid $info-200;
    }

    &.secondary {
        background-color: rgba($gray-500, 0.1);
        border: 2px solid $gray-200;
    }

    @include mobile-only {
        width: 36px;
        height: 36px;
    }
}

.emoji {
    font-size: $text-lg;
    line-height: 1;

    @include mobile-only {
        font-size: $text-base;
    }
}

.unreadDot {
    position: absolute;
    top: -2px;
    right: -2px;
    width: 12px;
    height: 12px;
    background-color: $primary-500;
    border: 2px solid $surface-primary;
    border-radius: 50%;
    animation: pulse 2s infinite;
}

.avatar {
    flex-shrink: 0;

    a {
        display: block;
        text-decoration: none;
    }
}

.avatarImage {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    object-fit: cover;
    border: 2px solid $border-light;
    transition: border-color $transition-base;

    .avatar a:hover & {
        border-color: $primary-300;
    }

    @include mobile-only {
        width: 36px;
        height: 36px;
    }
}

.text {
    flex: 1;
    min-width: 0;
    display: flex;
    flex-direction: column;
    gap: $spacing-1;
}

.message {
    a {
        text-decoration: none;
        color: inherit;
        display: block;

        &:hover {
            .title {
                color: $primary-600;
            }
        }
    }
}

.title {
    @include body-base;
    font-weight: $font-semibold;
    color: $text-primary;
    margin: 0 0 $spacing-1 0;
    transition: color $transition-base;
    line-height: $leading-snug;

    @include mobile-only {
        font-size: $text-sm;
    }
}

.description {
    @include body-small;
    color: $text-secondary;
    margin: 0;
    line-height: $leading-relaxed;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;

    @include mobile-only {
        font-size: $text-xs;
        -webkit-line-clamp: 3;
    }
}

.metadata {
    display: flex;
    align-items: center;
    gap: $spacing-2;
    flex-wrap: wrap;
    margin-top: $spacing-1;
}

.time {
    @include body-small;
    color: $text-muted;
    font-weight: $font-medium;
    font-size: $text-xs;
}

.separator {
    color: $text-muted;
    font-size: $text-xs;
}

.postTitle {
    @include body-small;
    color: $text-muted;
    font-size: $text-xs;
    font-style: italic;
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    overflow: hidden;
}

.actions {
    display: flex;
    flex-direction: column;
    gap: $spacing-2;
    flex-shrink: 0;
    align-items: flex-end;

    @include mobile-only {
        flex-direction: row;
        align-items: center;
    }
}

.primaryActions,
.secondaryActions {
    display: flex;
    gap: $spacing-1;
}

.actionButton {
    padding: $spacing-1;
    min-width: auto;
    width: 32px;
    height: 32px;
    border-radius: $radius-md;

    &:hover {
        background-color: rgba($primary-500, 0.1);
    }

    svg {
        width: 16px;
        height: 16px;
    }

    @include mobile-only {
        width: 28px;
        height: 28px;

        svg {
            width: 14px;
            height: 14px;
        }
    }
}

.deleteButton {
    &:hover {
        background-color: rgba($error-500, 0.1);
        color: $error-600;
    }
}

// Animations
@keyframes pulse {
    0%,
    100% {
        opacity: 1;
        transform: scale(1);
    }
    50% {
        opacity: 0.5;
        transform: scale(1.1);
    }
}

// Loading skeleton
.notificationItem.loading {
    .title,
    .description {
        background: linear-gradient(
            90deg,
            $bg-muted 25%,
            $gray-100 50%,
            $bg-muted 75%
        );
        background-size: 200% 100%;
        animation: shimmer 1.5s infinite;
        color: transparent;
        border-radius: $radius-sm;
    }

    .title {
        height: 18px;
        width: 80%;
    }

    .description {
        height: 32px;
        width: 100%;
    }
}

@keyframes shimmer {
    0% {
        background-position: -200% 0;
    }
    100% {
        background-position: 200% 0;
    }
}

// Focus states for accessibility
.actionButton:focus-visible {
    outline: 2px solid $primary-500;
    outline-offset: 2px;
}

.message a:focus-visible {
    outline: 2px solid $primary-500;
    outline-offset: 2px;
    border-radius: $radius-sm;
}

// Responsive adjustments
@include mobile-only {
    .content {
        gap: $spacing-2;
    }

    .metadata {
        flex-direction: column;
        align-items: flex-start;
        gap: $spacing-1;
    }

    .actions {
        margin-top: $spacing-2;
        align-self: stretch;
        justify-content: flex-end;
    }
}

// Dark mode support
@media (prefers-color-scheme: dark) {
    .notificationItem {
        &.unread {
            background-color: rgba($primary-900, 0.2);
            border-color: $primary-700;
        }
    }

    .avatarImage {
        border-color: $gray-600;
    }

    .unreadDot {
        border-color: $gray-800;
    }
}

// Print styles
@media print {
    .notificationItem {
        break-inside: avoid;
        box-shadow: none;
        border: 1px solid $border-light;
    }

    .actions {
        display: none;
    }
}

// High contrast mode
@media (prefers-contrast: high) {
    .notificationItem {
        border: 2px solid $text-primary;

        &.unread {
            background-color: $primary-100;
        }
    }

    .actionButton {
        border: 1px solid $text-primary;
    }
}
